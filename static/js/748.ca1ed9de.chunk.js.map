{"version":3,"file":"static/js/748.ca1ed9de.chunk.js","mappings":"wPA8EA,EArEmB,WACf,OAAyCA,EAAAA,EAAAA,KAAjCC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAE/B,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAA4BF,EAAAA,EAAAA,UAAS,GAAE,eAAhCG,EAAM,KAAEC,EAAS,KACxB,GAA4CJ,EAAAA,EAAAA,WAAS,GAAM,eAApDK,EAAc,KAAEC,EAAiB,MAExCC,EAAAA,EAAAA,YAAU,WACNC,EAAUL,EACd,GAAG,IAGH,IAAMK,EAAY,SAACL,GACfG,GAAkB,GAClBT,EAAaM,GACRM,KAAKC,GACLD,KAAKL,EAAUD,EAAS,GACjC,EAEMO,EAAqB,SAACC,GACxBT,EAAU,GAAD,eAAKD,IAAM,OAAKU,KACzBL,GAAkB,EACtB,EA2BMM,EAzBc,SAACC,GACjB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GACzB,IAAMC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,MAAOC,EAAcJ,EAAdI,UAGpB,OAFa,GAATD,EAAYA,EAAQ,gBACnBA,GAAgB,KAEjB,eAAIE,UAAU,eAAc,UACxB,UAAC,KAAI,CACDC,GAAE,kBAAaN,EAAKO,IACpBC,QAAS,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,cAAcC,UAAUC,IAAI,SAAS,EAC5DC,OAAQ,SAAAL,GAAC,OAAIA,EAAEC,OAAOC,cAAcC,UAAUG,OAAO,SAAS,EAAC,WAC/D,gBAAKC,IAAKZ,EAAWa,IAAI,eAAeZ,UAAU,sBAClD,gBAAKA,UAAU,oBAAmB,SAAEH,KACpC,gBAAKG,UAAU,qBAAoB,SAAEF,QAPXF,EAW1C,IACA,OACI,eAAII,UAAU,eAAc,SACvBR,GAGb,CAEcqB,CAAYhC,GAEpBiC,GACF,mBAAQC,SAAU9B,EAAgB+B,QAAS,SAACjC,GAAM,OAAKK,EAAUL,EAAO,EAAEiB,UAAU,mCAAkC,UAClH,gBAAKA,UAAU,QAAO,SAAEf,GAAiB,SAACgC,EAAA,EAAO,CAACC,MAAM,OAAOC,OAAO,SAAY,gBAGpFC,EAAU1C,GAAU,SAACuC,EAAA,EAAO,IAAM,KAClCI,EAAe1C,GAAQ,SAAC,IAAY,IAAM,KAEhD,OACI,iBAAKqB,UAAU,eAAc,UACxBqB,EACAD,EACA5B,EACAX,EAAOyC,OAAS,EAAIR,EAAS,OAG1C,EC3DA,EAZmB,WACf,OACI,iCACI,UAACS,EAAA,EAAM,YACH,iBAAMC,KAAK,cAAcC,QAAQ,kCACjC,2BAAO,oBAEX,SAACC,EAAA,EAAS,KACV,SAAC,EAAU,MAGvB,C,iFCZe,SAASC,EAAmBlC,GACzC,OCJa,SAA4BA,GACzC,GAAImC,MAAMC,QAAQpC,GAAM,OAAO,EAAAqC,EAAA,GAAiBrC,EAClD,CDES,CAAkBA,IELZ,SAA0BsC,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBtC,KAAQ,EAAA0C,EAAA,GAA2B1C,IGLvE,WACb,MAAM,IAAI2C,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nconst ComicsList = () => {\n    const { getAllComics, loading, error } = useMarvelService();\n\n    const [comics, setComics] = useState([]);\n    const [offset, setOffset] = useState(8);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n\n    useEffect(() => {\n        onRequest(offset);\n    }, []);\n\n\n    const onRequest = (offset) => {\n        setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(setOffset(offset + 8));\n    }\n\n    const onComicsListLoaded = (comicsArr) => {\n        setComics([...comics, ...comicsArr]);\n        setNewItemLoading(false);\n    }\n\n    const renderItems = (arr) => {\n        const items = arr.map((item, i) => {\n            let { title, price, thumbnail } = item;\n            if (price == 0) price = 'NOT AVAILABLE'\n            else price = price + '$'\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link\n                        to={`/comics/${item.id}`}\n                        onFocus={e => e.target.parentElement.classList.add('active')}\n                        onBlur={e => e.target.parentElement.classList.remove('active')}>\n                        <img src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li >\n            )\n        })\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comics);\n\n    const button =\n        <button disabled={newItemLoading} onClick={(offset) => onRequest(offset)} className=\"button button__main button__long\">\n            <div className=\"inner\">{newItemLoading ? <Spinner width='100%' height=\"18px\" /> : 'load more'}</div>\n        </button>;\n\n    const spinner = loading ? <Spinner /> : null;\n    const errorMessage = error ? <ErrorMessage /> : null;\n\n    return (\n        <div className=\"comics__list\" >\n            {errorMessage}\n            {spinner}\n            {items}\n            {comics.length > 0 ? button : null}\n        </div >\n    )\n}\n\nexport default ComicsList;\n\n","import { Helmet } from 'react-helmet';\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta name=\"description\" content=\"Page with list of our comics\" />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\nexport default ComicsPage;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useMarvelService","getAllComics","loading","error","useState","comics","setComics","offset","setOffset","newItemLoading","setNewItemLoading","useEffect","onRequest","then","onComicsListLoaded","comicsArr","items","arr","map","item","i","title","price","thumbnail","className","to","id","onFocus","e","target","parentElement","classList","add","onBlur","remove","src","alt","renderItems","button","disabled","onClick","Spinner","width","height","spinner","errorMessage","length","Helmet","name","content","AppBanner","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}