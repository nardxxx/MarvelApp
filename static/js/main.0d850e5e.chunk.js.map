{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","hooks/http.hook.js","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers-logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllComics","a","offset","res","results","map","_transformComics","getAllCharacters","_transformCharacter","getCharacter","id","char","title","prices","thumbnail","price","path","extension","name","description","urls","comics","styles","match","objectFit","homepage","wiki","items","Spinner","width","height","xmlns","margin","background","display","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","View","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","CharList","props","chars","setChars","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","setCharId","onRequest","initial","onCharListLoaded","newChars","ended","length","charlist","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","ref","el","tabIndex","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","limitedComicsList","push","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","setComics","onComicsListLoaded","comicsArr","onFocus","target","parentElement","onBlur","button","ComicsPage","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d850e5e.chunk.js","sourcesContent":["import { Link, NavLink } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <NavLink\n                            end\n                            style={({ isActive }) => ({ color: isActive ? '#9f0013' : 'inherit' })}\n                            to=\"/\">\n                            Characters\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink\n                            end\n                            style={({ isActive }) => ({ color: isActive ? '#9f0013' : 'inherit' })}\n                            to=\"/comics\">\n                            Comics\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header >\n    )\n}\n\nexport default AppHeader;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=0c147f3fb1ba1121177fc124b55cf56a';\r\n    const _baseOffset = 210;\r\n\r\n\r\n    const getAllComics = async (offset = 9) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformComics = (char) => {\r\n        let { title, prices, thumbnail, id } = char;\r\n\r\n        return {\r\n            title,\r\n            price: prices[0].price,\r\n            thumbnail: thumbnail.path + '.' + thumbnail.extension,\r\n            id,\r\n        }\r\n    }\r\n    const _transformCharacter = (char) => {\r\n        let { name, description, thumbnail, urls, id, comics } = char;\r\n        description = description ? description : 'Description not found.';\r\n        const styles = (thumbnail.path.match('image_not_available')) ? { objectFit: 'fill' } : null;\r\n\r\n        return {\r\n            name,\r\n            description,\r\n            thumbnail: thumbnail.path + '.' + thumbnail.extension,\r\n            homepage: urls[0].url,\r\n            wiki: urls[1].url,\r\n            id,\r\n            styles,\r\n            comics: comics.items\r\n        }\r\n    }\r\n\r\n    return {\r\n        loading, error, clearError, getAllCharacters, getCharacter, getAllComics\r\n    }\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch (err) {\r\n            setLoading(false);\r\n            setError(err.message);\r\n            throw err;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError }\r\n}","const Spinner = ({ width, height }) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width={width ? width : '200px'} height={height ? height : '200px'} viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{\r\n            display: 'block',\r\n            width: '250px',\r\n            height: '250px',\r\n            objectFit: 'contain',\r\n            margin: '0 auto'\r\n        }} alt='Error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nimport './randomChar.scss';\n\nfunction RandomChar() {\n    const [char, setChar] = useState({});\n\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null\n\n    return (\n        <div className=\"randomchar\" >\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br />\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\">\n                    <div className=\"inner\" onClick={updateChar}>try it</div>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, styles } = char;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} style={styles} alt=\"Random character\" className=\"randomchar__img\" />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import React, { useEffect, useState, useRef } from 'react';\n\nimport Spinner from '../spinner/spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    const [chars, setChars] = useState([]),\n        [newItemLoading, setNewItemLoading] = useState(false),\n        [offset, setOffset] = useState(210),\n        [charEnded, setCharEnded] = useState(false),\n        [charId, setCharId] = useState(null);\n\n    const { loading, error, getAllCharacters } = useMarvelService();\n\n    useEffect(() => onRequest(offset, true), []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded);\n    }\n\n    function onCharListLoaded(newChars) {\n        let ended = false;\n        if (newChars.length < 9) ended = true;\n\n        setChars(charlist => [...chars, ...newChars]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    // ${item.id == this.state.charId ? ' char__item_selected' : ''}\n                    className={`char__item`}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    tabIndex={i + 1}\n                    onClick={\n                        () => {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                            setCharId(item.id);\n                        }\n                    }\n                    onKeyPress={\n                        (e) => {\n                            if (e.key == ' ' || e.key == 'Enter') {\n                                props.onCharSelected(item.id);\n                                focusOnItem(i);\n                                setCharId(item.id);\n                            }\n                        }\n                    }>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(chars);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ 'display': charEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">{newItemLoading ? <Spinner width='100%' height=\"18px\" /> : 'load more'}</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;\n\n\n\n\n\n\n\n\n\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nfunction CharInfo(props) {\n    const [char, setChar] = useState(null);\n\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, []);\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        const { charId } = props;\n\n        if (!charId) {\n            return;\n        }\n        clearError();\n\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton />\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics, styles } = char;\n\n    const limitedComicsList = [];\n\n    for (let i = 0; i < comics.length; i++) {\n        if (i >= 9) break;\n\n        limitedComicsList.push(\n            <li key={i + 1} className=\"char__comics-item\">\n                {comics[i].name}\n            </li>)\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} style={styles} alt={name} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length <= 0 ? 'There is not comics with this character' : null}\n                {\n                    limitedComicsList\n                }\n            </ul>\n        </>\n    )\n}\n\n// CharInfo.defaultProps = {\n//     charId: PropTypes.string\n// }\n// CharInfo.propTypes = {\n//     charId: PropTypes.number\n// }\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    function onCharSelected(id) {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected} />\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar} />\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers-logo.8765a72d.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers-logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\" />\n            <div className=\"app__banner-text\">\n                New comics every week!<br />\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\" />\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect, useRef } from 'react';\n\nimport './comicsList.scss';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nconst ComicsList = () => {\n    const { getAllComics, loading, error } = useMarvelService();\n\n    const [comics, setComics] = useState([]);\n    const [offset, setOffset] = useState(8);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n\n    useEffect(() => {\n        onRequest(offset);\n    }, []);\n\n\n    const onRequest = (offset) => {\n        setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(setOffset(offset + 8));\n    }\n\n    const onComicsListLoaded = (comicsArr) => {\n        setComics([...comics, ...comicsArr]);\n        setNewItemLoading(false);\n    }\n\n\n\n    const renderItems = (arr) => {\n        const items = arr.map((item, i) => {\n            let { title, price, thumbnail } = item;\n            if (price == 0) price = 'NOT AVAILABLE'\n            else price = price + '$'\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <a\n                        href=\"#e\"\n                        onFocus={e => e.target.parentElement.classList.add('active')}\n                        onBlur={e => e.target.parentElement.classList.remove('active')}>\n                        <img src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </a>\n                </li >\n            )\n        })\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comics);\n\n    const button =\n        <button disabled={newItemLoading} onClick={(offset) => onRequest(offset)} className=\"button button__main button__long\">\n            <div className=\"inner\">{newItemLoading ? <Spinner width='100%' height=\"18px\" /> : 'load more'}</div>\n        </button>;\n\n    const spinner = loading ? <Spinner /> : null;\n    const errorMessage = error ? <ErrorMessage /> : null;\n\n    return (\n        <div className=\"comics__list\" >\n            {errorMessage}\n            {spinner}\n            {items}\n            {comics.length > 0 ? button : null}\n        </div >\n    )\n}\n\nexport default ComicsList;\n\n","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\nexport default ComicsPage;\r\n","import { HashRouter as Router, Route, Routes } from 'react-router-dom';\n\nimport AppHeader from \"../appHeader/AppHeader\";\n\nimport { MainPage, ComicsPage } from '../pages';\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"app\" >\n                <AppHeader />\n                <main>\n                    <Routes>\n                        <Route element={<MainPage />} path=\"/\" />\n                        <Route element={<ComicsPage />} path=\"/comics\" />\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\n\nexport default App;\n\n\n\n// import { useState, useEffect } from 'react';\n// import { Container } from 'react-bootstrap';\n\n// function useInputWithValidate(initialValue) {\n//     const [value, setValue] = useState(initialValue);\n\n//     const onChange = event => {\n//         setValue(event.target.value);\n//     }\n\n//     const validateInput = () => {\n//         return value.search(/\\d/) >= 0\n//     }\n\n//     return { value, onChange, validateInput }\n// }\n\n// const Form = () => {\n//     const input = useInputWithValidate('');\n//     const textArea = useInputWithValidate('');\n\n//     const color = input.validateInput() ? 'text-danger' : null;\n\n//     return (\n//         <Container>\n//             <form className=\"w-50 border mt-5 p-3 m-auto\">\n//                 <div className=\"mb-3\">\n//                     <input value={`${input.value} / ${textArea.value}`} type=\"text\" className=\"form-control\" readOnly />\n//                     <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mt-3\">Email address</label>\n//                     <input\n//                         onChange={input.onChange}\n//                         type=\"email\"\n//                         value={input.value}\n//                         className={`form-control ${color}`}\n//                         id=\"exampleFormControlInput1\"\n//                         placeholder=\"name@example.com\" />\n//                 </div>\n//                 <div className=\"mb-3\">\n//                     <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label>\n//                     <textarea\n//                         onChange={textArea.onChange}\n//                         value={textArea.value}\n//                         className=\"form-control\"\n//                         id=\"exampleFormControlTextarea1\"\n//                         rows=\"3\"></textarea>\n//                 </div>\n//             </form>\n//         </Container>\n//     )\n// }\n\n// function App() {\n//     return (\n//         <Form />\n//     );\n// }\n\n// export default App;\n","import React, { Children, cloneElement, Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}